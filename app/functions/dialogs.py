from time import sleep
import flet as ft
import shutil

from ..service.read_write.settings_file import election_data
from ..service.scr.check_installation import path
from ..service.scr.local_files_scr import warnings, error_data, firebase_project, file_path


def message_dialogs(page: ft.Page, message_key: str):
    def on_ok(e):
        message_alertdialog.open = False
        page.update()
        if message_key == "Restart Required":
            page.window_destroy()

    # AlertDialog data
    message_alertdialog = ft.AlertDialog(
        modal=True,
        title=ft.Text(
            value=f"{message_key}",
            font_family='Verdana',
        ),
        content=ft.Text(
            value=f"{warnings[message_key]}",
            font_family='Verdana',
        ),
        actions=[
            ft.TextButton(
                text="Ok",
                on_click=on_ok,
            ),
        ],
        actions_alignment=ft.MainAxisAlignment.END,
    )

    # Open dialog
    page.dialog = message_alertdialog
    message_alertdialog.open = True
    page.update()


def connection_file_error(page: ft.Page):
    def troubleshoot(e):
        connection_error.open = False
        page.update()
        troubleshoot_file_error(page)

    def pick_files_result(e: ft.FilePickerResultEvent):
        selected_file = "".join(map(lambda f: f.name, e.files)) if e.files else False
        selected_file_path = ", ".join(map(lambda f: f.path, e.files)) if e.files else False

        if selected_file is not False:
            des = path + file_path['connection'] + selected_file
            shutil.move(selected_file_path, des)
            election_data('default', des)
            from ..service.connection.check_files import check_connection_files
            connection_error.open = False
            page.update()
            check_connection_files(page)

    pick_files_dialog = ft.FilePicker(on_result=pick_files_result)
    page.overlay.append(pick_files_dialog)

    # AlertDialog data
    connection_error = ft.AlertDialog(
        modal=True,
        title=ft.Text(
            value="Connect Firebase",
            font_family='Verdana',
        ),
        content=ft.Text(
            value="To proceed, please upload the private key generated by your Firebase project. If you don't have a Firebase project yet. Please contact support for assistance or refer to our GitHub repository for troubleshooting.",
            font_family='Verdana',
            width=650
        ),
        actions=[
            ft.TextButton(
                text="Troubleshoot",
                icon=ft.icons.TROUBLESHOOT_ROUNDED,
                on_click=troubleshoot,
            ),
            ft.TextButton(
                text="Upload file",
                icon=ft.icons.UPLOAD_ROUNDED,
                on_click=lambda _: pick_files_dialog.pick_files(allow_multiple=True),
            ),
        ],
        actions_alignment=ft.MainAxisAlignment.END,
    )

    page.dialog = connection_error
    connection_error.open = True
    page.update()


def troubleshoot_file_error(page: ft.Page):
    def on_ok(e):
        troubleshoot.open = False
        page.update()
        connection_file_error(page)

    content_column = ft.Column(
        [
            ft.Container(
                ft.Column(
                    [
                        ft.Row(
                            [
                                ft.Row(
                                    [
                                        ft.Icon(
                                            name=ft.icons.TROUBLESHOOT_ROUNDED,
                                            size=30
                                        ),
                                        ft.Text(
                                            value="Manual Troubleshoot",
                                            font_family='Verdana',
                                            size=30,
                                            weight=ft.FontWeight.BOLD
                                        )
                                    ]
                                ),
                                ft.Row(
                                    [
                                        ft.IconButton(
                                            icon=ft.icons.CLOSE_ROUNDED,
                                            on_click=on_ok,
                                            tooltip="Close",
                                            icon_color=ft.colors.BLACK,
                                            icon_size=25,
                                        )
                                    ]
                                )
                            ],
                            alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                            key='top'
                        ),
                        ft.Column(height=10),
                        ft.Markdown(
                            selectable=False,
                            value=firebase_project,
                            code_theme="atom-one-dark",
                            code_style=ft.TextStyle(font_family="Verdana"),
                        ),
                        ft.Column(height=20),
                        ft.Row(
                            [
                                ft.IconButton(
                                    icon=ft.icons.ARROW_CIRCLE_UP_ROUNDED,
                                    tooltip='Back to Top',
                                    icon_size=30,
                                    icon_color=ft.colors.BLACK87,
                                    on_click=lambda _: content_column.scroll_to(key="top", duration=1000)
                                ),
                            ],
                            width=650,
                            alignment=ft.MainAxisAlignment.END
                        )
                    ]
                ),
                padding=ft.padding.only(right=15)
            ),
        ],
        scroll=ft.ScrollMode.ADAPTIVE,
        width=650,
        height=650,
    )

    # AlertDialog data
    troubleshoot = ft.AlertDialog(
        modal=True,
        content=content_column,
    )

    page.dialog = troubleshoot
    troubleshoot.open = True
    page.update()
